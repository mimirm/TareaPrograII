public class Separador{
    private Convertidor convertidor;
    private int [][] lienzo;
    private int [][] copiaPintada;
    private int [][] copiaControl;
    private int [][] original;
    public static final int [] SUMA_F = {-1,-1, 0, 1, 1, 1, 0,-1 };
    public static final int [] SUMA_C = {0, 1, 1, 1, 0,-1,-1,-1 };
    private int area;
    private Inventario inventario;
    public Separador(String nombreImagen){ // ponerle argumento
        convertidor = new Convertidor(nombreImagen);
        area = 0;
        lienzo = convertidor.getLienzo();
        copiaPintada = new int [lienzo.length][lienzo[0].length];
        copiaControl = new int [lienzo.length][lienzo[0].length];
        original = convertidor.getOriginal();
        for (int f = 0; f < copiaPintada.length; ++f){
            for(int c = 0; c < copiaPintada[0].length; ++c){
                copiaPintada[f][c] = 1;
                copiaControl[f][c] = 1;
            }
        } 
    }

    public boolean esValida(int f,int c){
        return lienzo!=null && f >=0 && f < lienzo.length && lienzo[f]!=null && c >=0 && c < lienzo[f].length;
    }

    public void separarImagen(){
        boolean buscar = true;    
        for (int f = 0; f < lienzo.length && buscar  ; ++f){
            for(int c = 0; c < lienzo[0].length && buscar ; ++c){ 
                if (lienzo[f][c] != -2){
                    buscarVecinos(f,c, -2);
                    buscar = false;
                }
            } 
        }
    }

    private void buscarVecinos (int f, int c, int fondo){
        copiaPintada[f][c] = original[f][c];
        copiaControl[f][c]= lienzo[f][c];
        lienzo[f][c] = -2; // Borra lo que ya copio
        for (int d = 0; d < 8 ; ++d){
            if(esValida(f + SUMA_F[d], c + SUMA_C[d]) && lienzo[f + SUMA_F[d]][c + SUMA_C[d]] != fondo && copiaPintada[f + SUMA_F[d]][c + SUMA_C[d]] == 1){
                buscarVecinos(f + SUMA_F[d], c + SUMA_C[d],fondo);
            }
        }

    }    

    public void toString(int[][] matriz){
        for(int f = 0; f < matriz.length; f++){
            for(int c = 0; c < matriz[f].length; c++){
                System.out.print(" "+matriz[f][c]); 
            } 
            System.out.println("");
        }
        System.out.println("\nOtra");
    }

    public void pintarMatriz(int[][] x , int color){
        for (int contador = 0; contador < x.length; ++contador){
            for(int contador2 = 0; contador2 < x[contador].length; contador2++){
                x[contador][contador2] = color;
            }
        } 
    }

    public void run(){
        convertidor.run();
        inventario = new Inventario(convertidor.getFiguras());
        for(int c = 0; c < convertidor.getFiguras(); ++c){
            separarImagen();
            toString(copiaPintada);
            toString(copiaControl);
            inventario.meterImagenPintada(copiaPintada,c );
            inventario.meterImagenControl(copiaControl,c);
            pintarMatriz(copiaPintada,1);
            vaciarCopiaControl();
        }
    }

    public void vaciarCopiaControl(){
        for (int f = 0; f < copiaControl.length; ++f){
            for(int c = 0; c < copiaControl[0].length; c++){
                copiaControl[f][c] = -2;
            }
        } 
    }

public Inventario getInventario(){
        return inventario;
    }
}
