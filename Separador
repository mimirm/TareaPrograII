class Separador
{
    private Convertidor convertidor;
    private int [][] base;
    private int [][] copia;
    private int [][] copiacontrol;
    private int [][] original;
    public static final int [] SUMA_F = {-1,-1, 0, 1, 1, 1, 0,-1 };
    public static final int [] SUMA_C = {0, 1, 1, 1, 0,-1,-1,-1 };
    private int area;
    public Separador(String args)
    {
        convertidor = new Convertidor(args);
        area = 0;
        base = convertidor.getMatriz();
        copia = new int [base.length][base[0].length];
        copiacontrol = new int [base.length][base[0].length];
        original = convertidor.getOriginal();
        for (int contador = 0; contador < copia.length; ++contador){
            for(int contador2 = 0; contador2 < copia[contador].length; contador2++){
                copia[contador][contador2] = 1;
                copiacontrol[contador][contador2] = 1;
            }
        } 

    }

    public boolean esValida(int f,int c){
        return base!=null && f >=0 && f < base.length && base[f]!=null && c >=0 && c < base[f].length;

    }

    public void separarImagen()
    {
        boolean buscar = true;    

        for (int o = 0; o < base.length && buscar  ; ++o){
            for(int c = 0; c < base[o].length && buscar ; ++c){ 
                if (base[o][c] != 1){

                    buscarVecinos(o,c,1);
                    buscar = false;

                }

            } 
        }

    }

    private void buscarVecinos (int f, int c, int fondo){

        for (int o = 0; o < 8 ; ++o){
            if(esValida(f + SUMA_F[o],c + SUMA_C[o]) && base[f + SUMA_F[o]][c + SUMA_C[o]] != fondo && copia[f + SUMA_F[o]][c + SUMA_C[o]] == 1 ){
                copia[f + SUMA_F[o]][c + SUMA_C[o]] = original[f + SUMA_F[o]][c + SUMA_C[o]];
                copiacontrol[f + SUMA_F[o]][c + SUMA_C[o]] = base[f + SUMA_F[o]][c + SUMA_C[o]];
                base[f + SUMA_F[o]][c + SUMA_C[o]] = 1;
                buscarVecinos(f + SUMA_F[o], c + SUMA_C[o],fondo);

            }

        }
    }    

    public void toString(int[][] matriz){
        for(int f = 0; f < matriz.length; f++){
            for(int c = 0; c < matriz[f].length; c++){
                System.out.print(" "+matriz[f][c]); 
            } 
            System.out.println("");
        }
    }

    public void pintarMatriz(int[][] x , int color){
        for (int contador = 0; contador < x.length; ++contador){
            for(int contador2 = 0; contador2 < x[contador].length; contador2++){
                x[contador][contador2] = color;

            }
        } 

    }
    
    public void medirArea(){
        area = 0;
    for (int contador = 0; contador < copiacontrol.length; ++contador){
            for(int contador2 = 0; contador2 < copiacontrol[contador].length; contador2++){
               if(copiacontrol [contador][contador2] != 1 ){
                ++ area;
                
                }

            }
        } 
    
    }
    
  

    public void run(){
        convertidor.run();
       for(int c = 0; c < convertidor.getFiguras(); ++c){
        separarImagen();
        toString(copia);

        pintarMatriz(copia,1);
        
        
       }
    

    }
    
   

}
